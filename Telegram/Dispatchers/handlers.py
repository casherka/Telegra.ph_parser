from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
import Telegram.Dispatchers.keyboards as kb
import multiprocessing
import os
from parser import bot_main


router = Router()


class InputTitle(StatesGroup):
    Title = State()


@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–∞—Ä—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–∞ telgra.ph!\n\n'
                         # ------------------
                         'üîç –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏ —è –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥—É –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–±—è.\n\n'
                         # ------------------
                         'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: [–≤—Å—Ç–∞–≤—å —Å—É–º–º—É] –≤ –º–µ—Å—è—Ü. –ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ '
                         '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º!\n\n'
                         # ------------------
                         'üíé –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 7 –¥–Ω–µ–π, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ '
                         '–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤!\n\n', reply_markup=kb.about)


@router.callback_query(F.data == 'About')
async def about(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('–ü—Ä–∏–≤–µ—Ç! üëã –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ '
                                     '–ø–∞—Ä—Å–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–∞ telgra.ph. –ü—Ä–æ—Å—Ç–æ –¥–∞–π –º–Ω–µ '
                                     '–∫–æ–º–∞–Ω–¥—É, –∏ —è –Ω–∞–π–¥—É –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–±—è! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å '
                                     '—Å–µ–≥–æ–¥–Ω—è? üöÄ', reply_markup=kb.back)


@router.callback_query(F.data == 'Back')
async def about(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.edit_text('üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–∞—Ä—Å–∏—Ç—å'
                                     ' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–∞ telgra.ph!\n\n'
                                     # ------------------
                                     'üîç –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç,'
                                     ' –∏ —è –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥—É –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–±—è.\n\n'
                                     # ------------------
                                     'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: [–≤—Å—Ç–∞–≤—å —Å—É–º–º—É] –≤ –º–µ—Å—è—Ü. –ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞–µ—Ç'
                                     ' –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ '
                                     '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º!\n\n'
                                     # ------------------
                                     'üíé –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 7 –¥–Ω–µ–π, —á—Ç–æ–±—ã'
                                     ' —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ '
                                     '–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤!\n\n', reply_markup=kb.about)


@router.callback_query(F.data == 'Start')
async def input_title(callback: CallbackQuery, state: FSMContext):
    await state.set_state(InputTitle.Title)
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:', reply_markup=kb.cancel_enter)
    await callback.answer('')


@router.message(InputTitle.Title)
async def start(message: Message, state: FSMContext):
    await state.update_data(Title=message.text)
    data = await state.get_data()
    await state.clear()
    await message.answer(f"–ó–∞–ø—É—Å–∫ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º: {data['Title']}...")
    try:
        os.mkdir(str(message.from_user.id))
    except FileExistsError:
        pass

    process = multiprocessing.Process(target=bot_main, args=(data['Title'], message.from_user.id,))
    process.start()


@router.callback_query(F.data == 'Cancel_ent')
async def input_title(callback: CallbackQuery, state: FSMContext):
    state_chk = await state.get_state()
    if state_chk == 'InputTitle:Title':
        await state.clear()
        await callback.message.edit_text('üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫-–±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –ø–∞—Ä—Å–∏—Ç—å'
                                         ' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Å —Å–∞–π—Ç–∞ telgra.ph!\n\n'
                                         # ------------------
                                         'üîç –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç,'
                                         ' –∏ —è –±—ã—Å—Ç—Ä–æ –Ω–∞–π–¥—É –Ω—É–∂–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ–±—è.\n\n'
                                         # ------------------
                                         'üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏: [–≤—Å—Ç–∞–≤—å —Å—É–º–º—É] –≤ –º–µ—Å—è—Ü. –ü–æ–¥–ø–∏—Å–∫–∞ –¥–∞–µ—Ç'
                                         ' –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º –∏ '
                                         '–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º!\n\n'
                                         # ------------------
                                         'üíé –£ –Ω–∞—Å –µ—Å—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 7 –¥–Ω–µ–π, —á—Ç–æ–±—ã'
                                         ' —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ –±–µ–∑ '
                                         '–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤!\n\n', reply_markup=kb.about)
    else:
        await callback.message.delete()
    await callback.answer('')
